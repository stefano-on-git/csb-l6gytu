{"version":3,"sources":["hooks/useFetch.ts","Auth.tsx","Level1.tsx","Level2.tsx","App.tsx","index.tsx"],"names":["useFetch","url","options","cache","useRef","cancelRequest","initialState","status","error","undefined","data","useReducer","state","action","type","payload","dispatch","useEffect","fetchData","a","current","axios","response","generateCodeChallenge","codeVerifier","encoder","TextEncoder","encode","window","crypto","subtle","digest","base64Digest","base64encode","replace","Auth","store","setStore","config","children","useState","fetchUrlToken","setFetchUrlToken","fetchUrlUser","setFetchUrlUser","challengeCode","setChallengeCode","fetchToken","method","headers","Accept","URLSearchParams","grant_type","client_id","okta","clientID","redirect_uri","redirectUri","code","code_verifier","localStorage","getItem","fetchUserInfo","Authorization","access_token","location","search","match","codeParam","URL","href","searchParams","get","tenant","token","history","pushState","document","title","pathname","removeItem","user","sub","className","onClick","random","setItem","then","codeChallenge","responseType","responseMode","scope","uuidv4","Level1","props","style","padding","margin","backgroundColor","level1","countLvl1","level2","countLvl2","Level2","App","fetchConfig","appTitle","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.4f8e28c9.chunk.js","sourcesContent":["import { useEffect, useReducer, useRef } from \"react\";\nimport axios, { AxiosRequestConfig } from \"axios\";\n\n// State & hook output\nexport interface State<T> {\n  status: \"init\" | \"fetching\" | \"error\" | \"fetched\";\n  data?: T;\n  error?: string;\n}\n\ninterface Cache<T> {\n  [url: string]: T;\n}\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"request\" }\n  | { type: \"success\"; payload: T }\n  | { type: \"failure\"; payload: string };\n\nfunction useFetch<T = unknown>(\n  url?: string,\n  options?: AxiosRequestConfig\n): State<T> {\n  const cache = useRef<Cache<T>>({});\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    status: \"init\",\n    error: undefined,\n    data: undefined\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"request\":\n        return { ...initialState, status: \"fetching\" };\n      case \"success\":\n        return {\n          ...initialState,\n          status: \"fetched\",\n          data: action.payload\n        };\n      case \"failure\":\n        return {\n          ...initialState,\n          status: \"error\",\n          error: action.payload\n        };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    if (!url || url === \"\") {\n      return;\n    }\n\n    const fetchData = async () => {\n      dispatch({ type: \"request\" });\n      if (cache.current[url]) {\n        dispatch({ type: \"success\", payload: cache.current[url] });\n      } else {\n        try {\n          const response = await axios(url, options);\n          cache.current[url] = response.data;\n          if (cancelRequest.current) return;\n          dispatch({ type: \"success\", payload: response.data });\n        } catch (error) {\n          //if (cancelRequest.current) return;\n          //const errorMsg = (error as Error).message;\n          //dispatch({ type: \"failure\", payload: errorMsg });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      cancelRequest.current = true;\n    };\n  }, [url]);\n\n  return state;\n}\n\nexport default useFetch;\n","import { useEffect, useState } from \"react\";\r\nimport { GlobalStore } from \"./interfaces/Store\";\r\nimport { Config, User } from \"./interfaces/Models\";\r\nimport useFetch from \"./hooks/useFetch\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { TokenResponse } from \"./interfaces/request/Token\";\r\nimport * as random from \"randomstring\";\r\nimport { encode as base64encode } from \"base64-arraybuffer\";\r\n\r\ninterface Props {\r\n  store: GlobalStore;\r\n  setStore: React.Dispatch<React.SetStateAction<GlobalStore>>;\r\n  config: Config;\r\n  children: JSX.Element;\r\n}\r\n\r\nconst generateCodeChallenge = async (codeVerifier: string) => {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(codeVerifier);\r\n  const digest = await window.crypto.subtle.digest(\"SHA-256\", data);\r\n  const base64Digest = base64encode(digest);\r\n  // you can extract this replacing code to a function\r\n  return base64Digest.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\r\n};\r\n\r\nexport default function Auth({ store, setStore, config, children }: Props) {\r\n  // url state for begin useFetch request\r\n  const [fetchUrlToken, setFetchUrlToken] = useState<string>(\"\");\r\n  const [fetchUrlUser, setFetchUrlUser] = useState<string>(\"\");\r\n  // challenge code for token request\r\n  const [challengeCode, setChallengeCode] = useState<string>(\"\");\r\n\r\n  // PKCE step 1\r\n  // generate PKCE code challenge and\r\n  // redirect to okta login to obtain code for token request\r\n  const loginOKTA = () => {\r\n    const codeVerifier = random.generate(128);\r\n    localStorage.setItem(\"okta-code-verifier\", codeVerifier);\r\n    generateCodeChallenge(codeVerifier).then((codeChallenge) => {\r\n      window.location.href = `${\r\n        config.okta.tenant\r\n      }/oauth2/v1/authorize?client_id=${config.okta.clientID}&response_type=${\r\n        config.okta.responseType\r\n      }&response_mode=${config.okta.responseMode}&scope=${\r\n        config.okta.scope\r\n      }&redirect_uri=${\r\n        config.okta.redirectUri\r\n      }&state=${uuidv4()}&nonce=${uuidv4()}&code_challenge_method=S256&code_challenge=${codeChallenge}`;\r\n    });\r\n  };\r\n\r\n  // PKCE step 2\r\n  // useFetch for retrieve access token\r\n  const fetchToken = useFetch<TokenResponse>(fetchUrlToken, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    data: new URLSearchParams({\r\n      grant_type: \"authorization_code\",\r\n      client_id: config.okta.clientID,\r\n      redirect_uri: config.okta.redirectUri,\r\n      code: challengeCode,\r\n      code_verifier: localStorage.getItem(\"okta-code-verifier\") ?? \"\"\r\n    })\r\n  });\r\n\r\n  // useFetch for retrieve okta user info\r\n  const fetchUserInfo = useFetch<User>(fetchUrlUser, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${fetchToken.data?.access_token}`\r\n    }\r\n  });\r\n\r\n  // on page load after redirect from okta login\r\n  useEffect(() => {\r\n    // save challenge code obtained from okta\r\n    if (window.location.search.match(/code/gi)) {\r\n      const codeParam = new URL(window.location.href).searchParams.get(\"code\");\r\n      if (codeParam) setChallengeCode(codeParam);\r\n    }\r\n  }, []);\r\n\r\n  // after code acquisition\r\n  // set url to begin access token fetch\r\n  useEffect(() => {\r\n    if (challengeCode !== \"\") {\r\n      setFetchUrlToken(`${config.okta.tenant}/oauth2/v1/token`);\r\n    }\r\n  }, [config.okta.tenant, challengeCode]);\r\n\r\n  // after access token acquisition\r\n  // update global store with access token object\r\n  // cancel search params from address bar\r\n  // set url to begin user info fetch\r\n  useEffect(() => {\r\n    if (fetchToken.data && !store.token) {\r\n      setStore({ ...store, token: fetchToken.data });\r\n      setFetchUrlUser(`${config.okta.tenant}/oauth2/v1/userinfo`);\r\n      window.history.pushState({}, document.title, window.location.pathname);\r\n      localStorage.removeItem(\"okta-code-verifier\");\r\n    }\r\n  }, [setStore, store, fetchToken.data, config.okta.tenant]);\r\n\r\n  // update global store with user info object\r\n  useEffect(() => {\r\n    if (fetchUserInfo.data && !store.user)\r\n      setStore({ ...store, user: fetchUserInfo.data });\r\n  }, [fetchUserInfo.data, setStore, store]);\r\n\r\n  // after user authentication\r\n  // render children object\r\n  if (store.user && store.user.sub !== \"\") return children;\r\n\r\n  // before authentication\r\n  // show okta login button\r\n  if ((!store.user || store.user.sub === \"\") && challengeCode === \"\") {\r\n    return (\r\n      <div className=\"login-box\">\r\n        <h3>Login</h3>\r\n        <button onClick={loginOKTA}>Login with OKTA</button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Fetching access token...</div>;\r\n  }\r\n}\r\n","import { GlobalStore } from \"./interfaces/Store\";\r\n\r\nexport interface Props {\r\n  store: GlobalStore;\r\n  setStore: React.Dispatch<React.SetStateAction<GlobalStore>>;\r\n  children?: JSX.Element;\r\n}\r\n\r\nexport default function Level1(props: Props) {\r\n  return (\r\n    <div className=\"level1\">\r\n      <h3>Level 1</h3>\r\n      <div\r\n        style={{\r\n          padding: 10,\r\n          margin: 10,\r\n          backgroundColor: \"#eee\"\r\n        }}\r\n      >\r\n        count lvl1: <b>{props.store.level1.countLvl1}</b>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          props.setStore({\r\n            ...props.store,\r\n            level2: {\r\n              countLvl2: ++props.store.level2.countLvl2\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        Update count level 2\r\n      </button>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import { Props } from \"./Level1\";\r\n\r\nexport default function Level2(props: Props) {\r\n  return (\r\n    <div className=\"level2\">\r\n      <h4>Level 2</h4>\r\n      <div\r\n        style={{\r\n          padding: 10,\r\n          margin: 10,\r\n          backgroundColor: \"#eee\"\r\n        }}\r\n      >\r\n        count lvl2: <b>{props.store.level2.countLvl2}</b>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          props.setStore({\r\n            ...props.store,\r\n            level1: {\r\n              countLvl1: ++props.store.level1.countLvl1\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        Update count level 1\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport useFetch from './hooks/useFetch';\r\nimport * as models from './interfaces/Models';\r\nimport { GlobalStore } from './interfaces/Store';\r\nimport Auth from './Auth';\r\nimport Level1 from './Level1';\r\nimport Level2 from './Level2';\r\n\r\nimport './styles.css';\r\n\r\nexport default function App() {\r\n\tconst [store, setStore] = useState<GlobalStore>({\r\n\t\tlevel1: {\r\n\t\t\tcountLvl1: 0\r\n\t\t},\r\n\t\tlevel2: {\r\n\t\t\tcountLvl2: 0\r\n\t\t},\r\n\t\tuser: undefined,\r\n\t\ttoken: undefined\r\n\t});\r\n\r\n\t/*   useEffect(() => {\r\n    console.log(store);\r\n  }, [store]); */\r\n\r\n\tconst fetchConfig = useFetch<models.Config>('./config.json');\r\n\r\n\tif (fetchConfig.data) {\r\n\t\tdocument.title = fetchConfig.data.appTitle;\r\n\t}\r\n\r\n\treturn fetchConfig.data ? (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h1>Hello CodeSandbox</h1>\r\n\t\t\t<h2>Start editing to see some magic happen!</h2>\r\n\t\t\t<Auth store={store} setStore={setStore} config={fetchConfig.data}>\r\n\t\t\t\t<Level1 store={store} setStore={setStore}>\r\n\t\t\t\t\t<Level2 store={store} setStore={setStore}></Level2>\r\n\t\t\t\t</Level1>\r\n\t\t\t</Auth>\r\n\t\t</div>\r\n\t) : null;\r\n}\r\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}